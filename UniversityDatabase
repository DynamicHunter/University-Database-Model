-- Hunter Davis
-- Yuanshun Dong
-- Yosselin Velasco


-- DROP: child then parent

DROP TABLE university_classes;
DROP TABLE enrollment;
DROP TABLE requirements;
DROP TABLE courses;
DROP TABLE academic_departments;

DROP TABLE student_program; -- child
DROP TABLE academic_program; -- parent
DROP TABLE student; -- parent


-- Create Lookup Tables First
-- 8 Lookup Tables total, level is referenced twice (insert parenthesis attributes)

-- 1: Levels (Undergraduate, Graduate)
CREATE TABLE levels
(
  level VARCHAR(13)
);
-- 2: Degrees (BS, BA, MS, MBA, PhD)
CREATE TABLE degrees
(
  degree VARCHAR(3)
);
-- 3: Statuses (In Progress, Withdrawn, Completed)
CREATE TABLE statuses
(
  status VARCHAR(11)
);
-- 4: GradeOptions (C/NC, Graded, Audit)
CREATE TABLE grade_options
(
  grade_option VARCHAR(6)
);
-- 5: Grades (dependent on gradeOption, grade is W if withdrawn regardless of gradeOption)
CREATE TABLE grades
(
  grade VARCHAR(2)
);

-- 6: Semesters (Fall, Spring, Winter, Summer)
CREATE TABLE semesters
(
  semester VARCHAR(6)
);
-- 7: Formats (Lab, Lecture, Seminar, Activity)
CREATE TABLE formats
(
  format VARCHAR(8)
);
-- 8: requirementTypes (Prerequisite, Corequisite)
CREATE TABLE requirement_types
(
  requirement_type VARCHAR(12)
);

-- create: parent then child

CREATE TABLE students -- parent
(
  university_id VARCHAR(10),
  first_name    VARCHAR(20),
  last_name     VARCHAR(20),
  date_of_birth DATE--,
  --units_completed INT,
  --gpa             FLOAT
  -- units_completed and gpa calculated from the completed classes
  -- We took these out of the database because a higher level program would calculate these values
);

CREATE TABLE academic_programs -- parent
(
  subject             VARCHAR(30),
  level               ENUM,
  academic_year       VARCHAR(10),
  degree              ENUM,
  minimum_total_units INT
);


CREATE TABLE student_programs -- child
(
  selected_on DATE,
  status      ENUM, -- 'In Progress', 'Withdrawn', 'Completed'
  status_date DATE
);


CREATE TABLE academic_departments
(
  name         VARCHAR(20),
  abbreviation VARCHAR(4),
  phone        VARCHAR(12),
  location     VARCHAR(8)
);

-- acad dept parent to courses
CREATE TABLE courses
(
  course_number VARCHAR(4),
  title         VARCHAR(40),
  description   LONG VARCHAR, -- should be text?
  level         ENUM,         -- undergrad or grad
  units         INT
);

CREATE TABLE requirements
(
  requirement_type ENUM
);


-- association class b/w student and univ class
CREATE TABLE enrollment
(
  gradeOption    ENUM,
  grade          ENUM,
  -- if gradeOption is C/NC, grade must be one of those
  -- if gradeOption is withdraw, grade must be W or WU
  -- or if it's normal, grade must be A,B,C,D,F
  -- Keep them separate but keep in mind when entering sample data
  date_added     DATE,
  date_withdrawn DATE
);

-- course parent to univ class
CREATE TABLE university_classes
(
  semester     ENUM,
  year         INT,
  section      INT,
  format       ENUM, -- Lecture, seminar, lab, activity
  capacity     INT,
  --available_seats INT,
  -- derived from capacity and # students enrolled
  -- We removed
  open         BOOLEAN,
  meeting_days VARCHAR(70),
  start_time   TIME,
  end_time     TIME,
  location     VARCHAR(8)
);

-- Populate Lookup Tables first!
/*
levels
degrees
statuses
grade_options
grades
semesters
formats
requirement_types
*/
INSERT INTO levels
VALUES ('Undergraduate'),
       ('Graduate');

INSERT INTO degrees
VALUES ('');

INSERT INTO statuses
VALUES ('');

INSERT INTO grade_options
VALUES ();

INSERT INTO grades
VALUES ();

INSERT INTO semesters
VALUES ();

INSERT INTO formats
VALUES ();

INSERT INTO requirement_types
VALUES ();


INSERT INTO students
VALUES ('123456789', 'Hunter', 'Davis', '11/10/1998', 90, 3.0);

INSERT INTO student_programs
VALUES ('8/28/2016', '1', '2/24/2019');
